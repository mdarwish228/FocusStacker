target-version = "py39"
line-length = 88

[lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "D",  # pydocstyle (docstrings)
    "ANN", # flake8-annotations (type hints)
    "TC", # flake8-type-checking
]

ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "TC001", # Move standard library import into TYPE_CHECKING block
    "TC002", # Move third-party import into TYPE_CHECKING block
    "TC003", # Move standard library import into TYPE_CHECKING block
]

[lint.per-file-ignores]
"__init__.py" = ["F401"]

[lint.isort]
known-first-party = ["focus_stacking"]

[lint.pydocstyle]
convention = "google"

[lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true
